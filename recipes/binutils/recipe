program="binutils"
version="$VER_binutils"
release="1"
arch="i686"

tarname=${program}-${version}.tar.gz

description="

The GNU Binutils are a collection of binary tools. The main ones are:

    ld - the GNU linker.
    as - the GNU assembler.

But they also include:

    addr2line - Converts addresses into filenames and line numbers.
    ar - A utility for creating, modifying and extracting from archives.
    c++filt - Filter to demangle encoded C++ symbols.
    dlltool - Creates files for building and using DLLs.
    gold - A new, faster, ELF only linker, still in beta test.
    gprof - Displays profiling information.
    nlmconv - Converts object code into an NLM.
    nm - Lists symbols from object files.
    objcopy - Copies and translates object files.
    objdump - Displays information from object files.
    ranlib - Generates an index to the contents of an archive.
    readelf - Displays information from any ELF format object file.
    size - Lists the section sizes of an object or archive file.
    strings - Lists printable strings from files.
    strip - Discards symbols.
    windmc - A Windows compatible message compiler.
    windres - A compiler for Windows resource files.

---
"

build() {

unpack "${tardir}/$tarname"
cd "$srcdir"

echo -e "\n CreaciÃ³n paquete Qi $program para 32 bit" >> $FILE_BITACORA

#expect -c "spawn ls"
#Para la receta no hace falta

if [ -d "build" ] ; then
	rm -rv "build"
fi

mkdir build

cd build

CC="gcc ${BUILD32}" \
LDFLAGS="-Wl,-rpath-link,/usr/lib:/lib ${BUILD32}" \
../configure \
--prefix=/usr \
--enable-gold \
--enable-ld=default \
--enable-plugins \
--enable-shared \
--disable-werror \
--enable-64-bit-bfd \
--with-system-zlib
registro_error $MSG_CONF

make tooldir=/usr
registro_error "make tooldir=/usr"

#make -k check 2>&1 | tee $FILE_CHECKS

make tooldir=/usr DESTDIR=${destdir} install
registro_error "make tooldir=/usr install DESTDIR=${destdir}"

}











